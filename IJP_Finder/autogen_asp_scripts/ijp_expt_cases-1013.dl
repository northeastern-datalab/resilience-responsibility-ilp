r(1,1,1).
r(2,1,2).
r(3,1,3).
r(4,1,4).
r(5,1,5).
r(6,2,1).
r(7,2,2).
r(8,2,3).
r(9,2,4).
r(10,2,5).
r(11,3,1).
r(12,3,2).
r(13,3,3).
r(14,3,4).
r(15,3,5).
r(16,4,1).
r(17,4,2).
r(18,4,3).
r(19,4,4).
r(20,4,5).
r(21,5,1).
r(22,5,2).
r(23,5,3).
r(24,5,4).
r(25,5,5).
a(1,1).
a(2,2).
a(3,3).
a(4,4).
a(5,5).
b(1,1).
b(2,2).
b(3,3).
b(4,4).
b(5,5).
indb(r, Tid, 1) | indb(r, Tid, 0) :- r(Tid, _, _).
indb(a, Tid, 1) | indb(a, Tid, 0) :- a(Tid, _).
indb(b, Tid, 1) | indb(b, Tid, 0) :- b(Tid, _).
witness(X, Z, Y, T1, T2, T3, T4) :- r(T1, X, Y), r(T2, X, Z), a(T3, Y), b(T4, Z), indb(r, T1, 1), indb(r, T2, 1), indb(a, T3, 1), indb(b, T4, 1).

valid_res2(a, 1, 1).
invalid_res2(a, 1, 1).
valid_res3(a, 2, 1).
invalid_res3(a, 2, 1).
valid_res4(a, 1, 1).
invalid_res4(a, 1, 1).
valid_res4(a, 2, 1).
invalid_res4(a, 2, 1).

invalid_res1(r, Tid, 1) | invalid_res1(r, Tid, 0) :- r(Tid, _, _).
invalid_res1(a, Tid, 1) | invalid_res1(a, Tid, 0) :- a(Tid, _).
invalid_res1(b, Tid, 1) | invalid_res1(b, Tid, 0) :- b(Tid, _).

invalid_res2(r, Tid, 1) | invalid_res2(r, Tid, 0) :- r(Tid, _, _).
invalid_res2(a, Tid, 1) | invalid_res2(a, Tid, 0) :- a(Tid, _).
invalid_res2(b, Tid, 1) | invalid_res2(b, Tid, 0) :- b(Tid, _).

invalid_res3(r, Tid, 1) | invalid_res3(r, Tid, 0) :- r(Tid, _, _).
invalid_res3(a, Tid, 1) | invalid_res3(a, Tid, 0) :- a(Tid, _).
invalid_res3(b, Tid, 1) | invalid_res3(b, Tid, 0) :- b(Tid, _).

invalid_res4(r, Tid, 1) | invalid_res4(r, Tid, 0) :- r(Tid, _, _).
invalid_res4(a, Tid, 1) | invalid_res4(a, Tid, 0) :- a(Tid, _).
invalid_res4(b, Tid, 1) | invalid_res4(b, Tid, 0) :- b(Tid, _).

valid_res1(r, Tid, 1) | valid_res1(r, Tid, 0) :- r(Tid, _, _).
valid_res1(a, Tid, 1) | valid_res1(a, Tid, 0) :- a(Tid, _).
valid_res1(b, Tid, 1) | valid_res1(b, Tid, 0) :- b(Tid, _).

valid_res2(r, Tid, 1) | valid_res2(r, Tid, 0) :- r(Tid, _, _).
valid_res2(a, Tid, 1) | valid_res2(a, Tid, 0) :- a(Tid, _).
valid_res2(b, Tid, 1) | valid_res2(b, Tid, 0) :- b(Tid, _).

valid_res3(r, Tid, 1) | valid_res3(r, Tid, 0) :- r(Tid, _, _).
valid_res3(a, Tid, 1) | valid_res3(a, Tid, 0) :- a(Tid, _).
valid_res3(b, Tid, 1) | valid_res3(b, Tid, 0) :- b(Tid, _).

valid_res4(r, Tid, 1) | valid_res4(r, Tid, 0) :- r(Tid, _, _).
valid_res4(a, Tid, 1) | valid_res4(a, Tid, 0) :- a(Tid, _).
valid_res4(b, Tid, 1) | valid_res4(b, Tid, 0) :- b(Tid, _).


invalid_resilience1 :- witness(X, Z, Y, T1, T2, T3, T4), invalid_res1(r, T1, 0), invalid_res1(r, T2, 0), invalid_res1(a, T3, 0), invalid_res1(b, T4, 0).
invalid_resilience1 :- #count{Table, Tid: invalid_res1(Table, Tid, 1)} >= K, res(K).
invalid_resilience2 :- witness(X, Z, Y, T1, T2, T3, T4), invalid_res2(r, T1, 0), invalid_res2(r, T2, 0), invalid_res2(a, T3, 0), invalid_res2(b, T4, 0).
invalid_resilience2 :- #count{Table, Tid: invalid_res2(Table, Tid, 1)} >= K, res(K).
invalid_resilience3 :- witness(X, Z, Y, T1, T2, T3, T4), invalid_res3(r, T1, 0), invalid_res3(r, T2, 0), invalid_res3(a, T3, 0), invalid_res3(b, T4, 0).
invalid_resilience3 :- #count{Table, Tid: invalid_res3(Table, Tid, 1)} >= K, res(K).
invalid_resilience4 :- witness(X, Z, Y, T1, T2, T3, T4), invalid_res4(r, T1, 0), invalid_res4(r, T2, 0), invalid_res4(a, T3, 0), invalid_res4(b, T4, 0).
invalid_resilience4 :- #count{Table, Tid: invalid_res4(Table, Tid, 1)} >= K+1, res(K).

:- witness(X, Z, Y, T1, T2, T3, T4), valid_res1(r, T1, 0), valid_res1(r, T2, 0), valid_res1(a, T3, 0), valid_res1(b, T4, 0).
res(K) :- #count{Table, Tid: valid_res1(Table, Tid, 1)} = K.
:- witness(X, Z, Y, T1, T2, T3, T4), valid_res2(r, T1, 0), valid_res2(r, T2, 0), valid_res2(a, T3, 0), valid_res2(b, T4, 0).
:- not #count{Table, Tid: valid_res2(Table, Tid, 1)} = K, res(K).
:- witness(X, Z, Y, T1, T2, T3, T4), valid_res3(r, T1, 0), valid_res3(r, T2, 0), valid_res3(a, T3, 0), valid_res3(b, T4, 0).
:- not #count{Table, Tid: valid_res3(Table, Tid, 1)} = K, res(K).
:- witness(X, Z, Y, T1, T2, T3, T4), valid_res4(r, T1, 0), valid_res4(r, T2, 0), valid_res4(a, T3, 0), valid_res4(b, T4, 0).
:- not #count{Table, Tid: valid_res4(Table, Tid, 1)} = K+1, res(K).

invalid_res1(r, Tid, 0) :- invalid_resilience1, r(Tid, _, _).
invalid_res1(r, Tid, 1) :- invalid_resilience1, r(Tid, _, _).
invalid_res1(a, Tid, 0) :- invalid_resilience1, a(Tid, _).
invalid_res1(a, Tid, 1) :- invalid_resilience1, a(Tid, _).
invalid_res1(b, Tid, 0) :- invalid_resilience1, b(Tid, _).
invalid_res1(b, Tid, 1) :- invalid_resilience1, b(Tid, _).

invalid_res2(r, Tid, 0) :- invalid_resilience2, r(Tid, _, _).
invalid_res2(r, Tid, 1) :- invalid_resilience2, r(Tid, _, _).
invalid_res2(a, Tid, 0) :- invalid_resilience2, a(Tid, _).
invalid_res2(a, Tid, 1) :- invalid_resilience2, a(Tid, _).
invalid_res2(b, Tid, 0) :- invalid_resilience2, b(Tid, _).
invalid_res2(b, Tid, 1) :- invalid_resilience2, b(Tid, _).

invalid_res3(r, Tid, 0) :- invalid_resilience3, r(Tid, _, _).
invalid_res3(r, Tid, 1) :- invalid_resilience3, r(Tid, _, _).
invalid_res3(a, Tid, 0) :- invalid_resilience3, a(Tid, _).
invalid_res3(a, Tid, 1) :- invalid_resilience3, a(Tid, _).
invalid_res3(b, Tid, 0) :- invalid_resilience3, b(Tid, _).
invalid_res3(b, Tid, 1) :- invalid_resilience3, b(Tid, _).

invalid_res4(r, Tid, 0) :- invalid_resilience4, r(Tid, _, _).
invalid_res4(r, Tid, 1) :- invalid_resilience4, r(Tid, _, _).
invalid_res4(a, Tid, 0) :- invalid_resilience4, a(Tid, _).
invalid_res4(a, Tid, 1) :- invalid_resilience4, a(Tid, _).
invalid_res4(b, Tid, 0) :- invalid_resilience4, b(Tid, _).
invalid_res4(b, Tid, 1) :- invalid_resilience4, b(Tid, _).

:- not invalid_resilience1.
:- not invalid_resilience2.
:- not invalid_resilience3.
:- not invalid_resilience4.
range_triangle(1..3).range_domain(1..5).
endpoint1_constant(1).
endpoint2_constant(2).
:- witness(X, Z, Y, T1, T2, T3, T4), endpoint1_constant(X), endpoint1_constant(Z), endpoint1_constant(Y).
:- witness(X, Z, Y, T1, T2, T3, T4), endpoint2_constant(X), endpoint2_constant(Z), endpoint2_constant(Y).
:- not #count{ T1, T2, T3, T4: witness(X, Z, 1, T1, T2, T3, T4)} = 1.
:- not #count{ T1, T2, T3, T4: witness(X, Z, 2, T1, T2, T3, T4)} = 1.

isomorph_map(C, 1, C) :-  endpoint1_constant(C), range_triangle(I). % endpoint1 gets mapped to itself for edge 1
isomorph_map(C, 2, X) :-  endpoint1_constant(C), range_triangle(I), X = C + 1. %endpoint1 gets mapped to 2 for edge 2 - add endpoint arity
isomorph_map(C, 3, C) :-  endpoint1_constant(C), range_triangle(I). %endpoint1 gets mapped to itself for edge 3
isomorph_map(C, 1, C) :-  endpoint2_constant(C), range_triangle(I). %endpoint2 gets mapped to itself for edge 1
isomorph_map(C, 2, X) :-  endpoint2_constant(C), range_triangle(I), X = C + 1. %endpoint2 gets mapped to 3 for edge 2
isomorph_map(C, 3, X) :-  endpoint2_constant(C), range_triangle(I), X = C + 1. %endpoint2 gets mapped to 3 for edge 3
isomorph_map(C, I, X) :- range_triangle(I), range_domain(C), X = C+(5+1)*I, not endpoint1_constant(C), not endpoint2_constant(C).

ijp_isomorph_1_r(TID, VI0,VI1) :- indb(r, TID, 1), r(TID, V0,V1), isomorph_map(V0,1,VI0), isomorph_map(V1,1,VI1).
ijp_isomorph_1_a(TID, VI0) :- indb(a, TID, 1), a(TID, V0), isomorph_map(V0,1,VI0).
ijp_isomorph_1_b(TID, VI0) :- indb(b, TID, 1), b(TID, V0), isomorph_map(V0,1,VI0).
ijp_isomorph_2_r(TID, VI0,VI1) :- indb(r, TID, 1), r(TID, V0,V1), isomorph_map(V0,2,VI0), isomorph_map(V1,2,VI1).
ijp_isomorph_2_a(TID, VI0) :- indb(a, TID, 1), a(TID, V0), isomorph_map(V0,2,VI0).
ijp_isomorph_2_b(TID, VI0) :- indb(b, TID, 1), b(TID, V0), isomorph_map(V0,2,VI0).
ijp_isomorph_3_r(TID, VI0,VI1) :- indb(r, TID, 1), r(TID, V0,V1), isomorph_map(V0,3,VI0), isomorph_map(V1,3,VI1).
ijp_isomorph_3_a(TID, VI0) :- indb(a, TID, 1), a(TID, V0), isomorph_map(V0,3,VI0).
ijp_isomorph_3_b(TID, VI0) :- indb(b, TID, 1), b(TID, V0), isomorph_map(V0,3,VI0).

ijp_isomorph_triangle_r(TID, V0, V1) :- ijp_isomorph_1_r(TID, V0, V1).
ijp_isomorph_triangle_a(TID, V0) :- ijp_isomorph_1_a(TID, V0).
ijp_isomorph_triangle_b(TID, V0) :- ijp_isomorph_1_b(TID, V0).
ijp_isomorph_triangle_r(TID, V0, V1) :- ijp_isomorph_2_r(TID, V0, V1).
ijp_isomorph_triangle_a(TID, V0) :- ijp_isomorph_2_a(TID, V0).
ijp_isomorph_triangle_b(TID, V0) :- ijp_isomorph_2_b(TID, V0).
ijp_isomorph_triangle_r(TID, V0, V1) :- ijp_isomorph_3_r(TID, V0, V1).
ijp_isomorph_triangle_a(TID, V0) :- ijp_isomorph_3_a(TID, V0).
ijp_isomorph_triangle_b(TID, V0) :- ijp_isomorph_3_b(TID, V0).
ijp_triangle_witness(X, Z, Y) :- ijp_isomorph_triangle_r(T1, X, Y), ijp_isomorph_triangle_r(T2, X, Z), ijp_isomorph_triangle_a(T3, Y), ijp_isomorph_triangle_b(T4, Z).
number_of_witnesses(K) :- #count{ X, Z, Y, T1, T2, T3, T4 : witness(X, Z, Y, T1, T2, T3, T4) } = K.
:- number_of_witnesses(K), not  #count{ X, Z, Y : ijp_triangle_witness(X, Z, Y) }= 3*K.
:~ witness(X, Z, Y, T1, T2, T3, T4). [1@1, X, Z, Y]

#show.
#show number_of_witnesses(K) : number_of_witnesses(K).
#show witness(X, Z, Y) : witness(X, Z, Y, T1, T2, T3, T4).
#show res(K) : res(K).
